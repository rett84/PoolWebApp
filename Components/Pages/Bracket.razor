@page "/bracket"


<h2 class="text-center">Tournament Bracket</h2>

<div class="bracket-container">
    <!-- LEFT side -->
    <div class="bracket left">
        @for (int round = 0; round < Rounds.Count; round++)
        {
            <div class="round">
                @foreach (var match in Rounds[round])
                {
                    <div class="match">
                        <div class="team">
                            @match.HomeTeam.Name <input type="text"  class="score-input"/>
                        </div>
                        <div class="team">@match.AwayTeam.Name <input type="text"  class="score-input" /></div>
                    </div>
                }
            </div>
        }
    </div>

    <!-- FINAL in the center -->
    <div class="final-match">
        <div class="match">
            <div class="team">Winner Left</div>
            <div class="team">Winner Right</div>
        </div>
    </div>

    <!-- RIGHT side -->
    <div class="bracket right">
        @for (int round = 0; round < Rounds.Count; round++)
        {
            <div class="round">
                @foreach (var match in Rounds[round])
                {
                    <div class="match">
                        <div class="team">@match.HomeTeam.Name</div>
                        <div class="team">@match.AwayTeam.Name</div>
                    </div>
                }
            </div>
        }
    </div>
</div>


@code {
    // Data structure: list of rounds, each with list of matches
    private List<List<Games>> Rounds = new();

    protected override void OnInitialized()
    {
        // Example tournament: 8 teams -> 4 matches -> 2 matches -> 1 final
        var round1 = new List<Games>
        {
            new Games { HomeTeam = new Teams { Name = "Team A1" }, AwayTeam = new Teams { Name = "Team A2" } },
            new Games { HomeTeam = new Teams { Name = "Team B1" }, AwayTeam = new Teams { Name = "Team B2" } },
            new Games { HomeTeam = new Teams { Name = "Team C1" }, AwayTeam = new Teams { Name = "Team C2" } },
            new Games { HomeTeam = new Teams { Name = "Team D1" }, AwayTeam = new Teams { Name = "Team D2" } }
        };

        var round2 = new List<Games>
        {
            new Games { HomeTeam = new Teams { Name = "Winner A" }, AwayTeam = new Teams { Name = "Winner B" } },
            new Games { HomeTeam = new Teams { Name = "Winner C" }, AwayTeam = new Teams { Name = "Winner D" } }
        };

        var final = new List<Games>
        {
            new Games { HomeTeam = new Teams { Name = "Winner Semifinal 1" }, AwayTeam = new Teams { Name = "Winner Semifinal 2" } }
        };

        // Store rounds
        Rounds.Add(round1);
        Rounds.Add(round2);
        Rounds.Add(final);
    }

    public class Teams
    {
        public string Name { get; set; } = "";
    }

    public class Games
    {
        public Teams HomeTeam { get; set; } = new();
        public Teams AwayTeam { get; set; } = new();
    }
}


